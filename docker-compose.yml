# Docker Compose for Rancher Desktop
version: '3.8'

services:
  # Frontend Development Server
  frontend:
    image: node:22-alpine
    working_dir: /app
    command: npm run dev:frontend
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - aigovnav

  # Backend API Server
  backend:
    image: node:22-alpine
    working_dir: /app
    command: npm run dev:backend
    ports:
      - "4000:4000"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - aigovnav

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: aigovnav-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: aigovnav
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d aigovnav"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aigovnav

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aigovnav

  # Prisma Studio (Database GUI)
  prisma-studio:
    image: node:22-alpine
    working_dir: /app
    command: npx prisma studio
    ports:
      - "5555:5555"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    networks:
      - aigovnav

networks:
  aigovnav:
    driver: bridge

volumes:
  redis_data:
  postgres_data: